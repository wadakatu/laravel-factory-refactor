---
import BaseLayout from './BaseLayout.astro';
import HeroFocusedHeader from '../Headers/HeroFocusedHeader.astro';
import type { RepoData } from '../../types/index.js';

export interface Props {
  title: string;
  description: string;
  stats: {
    stars: number;
    forks: number;
    issues: number;
  };
  repoData?: RepoData;
  currentPage?: 'home' | 'docs' | string;
  githubUrl?: string;
}

const { title, description, stats, repoData, currentPage = 'home', githubUrl } = Astro.props;

// Hero-focused layout specific design tokens - keeping default design system
const heroTokens = {};

// Path configuration
const isProd = import.meta.env.PROD;
const docsPath = isProd ? '/gitlyte/docs' : '/docs';
---

<BaseLayout 
  title={title} 
  description={description} 
  repoData={repoData}
  layoutType="hero-focused"
  customTokens={heroTokens}
>
  <section class="hero-focused-layout">
    <!-- Navigation -->
    <HeroFocusedHeader title={title} currentPage={currentPage} githubUrl={githubUrl} />

    <!-- Main Hero Section -->
    <section class="hero">
      <div class="hero-background"></div>
      <div class="container">
        <div class="hero-content">
          <div class="badge">üöÄ Latest Release</div>
          <h1 class="hero-title">{title}</h1>
          <p class="subtitle">{description}</p>
          
          <div class="cta-section">
            <a href="#features" class="cta-primary">Get Started</a>
            <a href="#docs" class="cta-secondary">üìñ Documentation</a>
            <a href="https://github.com/wadakatu/gitlyte" class="cta-secondary" target="_blank" rel="noopener">üîó GitHub</a>
          </div>
          
          <div class="stats">
            <div class="stat">
              <span class="stat-number">{stats.stars.toLocaleString()}</span>
              <span class="stat-label">‚≠ê Stars</span>
            </div>
            <div class="stat">
              <span class="stat-number">{stats.forks.toLocaleString()}</span>
              <span class="stat-label">üç¥ Forks</span>
            </div>
            <div class="stat">
              <span class="stat-number">{stats.issues}</span>
              <span class="stat-label">üìä Issues</span>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Features Section -->
    <section id="features" class="features">
      <div class="container">
        <div class="section-header">
          <h2>Why Choose This Project?</h2>
          <p class="section-subtitle">Discover the powerful features that make this project stand out</p>
        </div>
        
        <div class="features-grid">
          <div class="feature-card">
            <div class="feature-icon">‚ö°</div>
            <h3>High Performance</h3>
            <p>Optimized algorithms and minimal overhead for maximum speed</p>
            <div class="feature-highlight">10x faster</div>
          </div>
          <div class="feature-card">
            <div class="feature-icon">üîß</div>
            <h3>Easy Integration</h3>
            <p>Simple installation and intuitive API design</p>
            <div class="feature-highlight">5-minute setup</div>
          </div>
          <div class="feature-card">
            <div class="feature-icon">üìö</div>
            <h3>Rich Documentation</h3>
            <p>Comprehensive guides, examples, and API references</p>
            <div class="feature-highlight">100% coverage</div>
          </div>
        </div>
      </div>
    </section>
  </section>
</BaseLayout>

<style>
  .hero-focused-layout {
    min-height: 100vh;
  }


  .hero {
    position: relative;
    background: linear-gradient(135deg, var(--color-primary), var(--color-secondary));
    color: white;
    padding: var(--space-5xl) 0;
    text-align: center;
    overflow: hidden;
  }

  .hero-background {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    opacity: 0.1;
    background: radial-gradient(circle at 30% 20%, var(--color-accent) 20%, transparent 50%),
                radial-gradient(circle at 70% 80%, var(--color-secondary) 20%, transparent 50%);
    animation: float 20s ease-in-out infinite;
  }

  .hero-content {
    max-width: 800px;
    margin: 0 auto;
    position: relative;
    z-index: 1;
  }

  .badge {
    display: inline-block;
    background: rgba(255, 255, 255, 0.15);
    padding: var(--space-sm) var(--space-md);
    border-radius: var(--radius-lg);
    font-size: var(--text-sm);
    margin-bottom: var(--space-xl);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .hero-title {
    font-size: clamp(2.5rem, 5vw, 4rem);
    margin-bottom: var(--space-lg);
    font-weight: 700;
    background: linear-gradient(45deg, white, rgba(255, 255, 255, 0.8));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    line-height: 1.1;
  }

  .subtitle {
    font-size: var(--text-xl);
    margin-bottom: var(--space-4xl);
    opacity: 0.9;
    line-height: 1.6;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .cta-section {
    display: flex;
    gap: var(--space-md);
    justify-content: center;
    margin-bottom: var(--space-4xl);
    flex-wrap: wrap;
  }

  .cta-primary {
    background: var(--color-accent);
    color: white;
    padding: var(--space-md) var(--space-xl);
    border-radius: var(--radius-lg);
    text-decoration: none;
    font-weight: 600;
    box-shadow: var(--shadow-md);
    transition: all 0.3s ease;
    border: 2px solid var(--color-accent);
  }

  .cta-primary:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-xl);
  }

  .cta-secondary {
    background: transparent;
    color: white;
    padding: var(--space-md) var(--space-xl);
    border-radius: var(--radius-lg);
    text-decoration: none;
    font-weight: 600;
    border: 2px solid rgba(255, 255, 255, 0.3);
    transition: all 0.3s ease;
  }

  .cta-secondary:hover {
    background: rgba(255, 255, 255, 0.1);
    border-color: rgba(255, 255, 255, 0.5);
  }

  .stats {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    gap: var(--space-xl);
    max-width: 500px;
    margin: 0 auto;
  }

  .stat {
    background: rgba(255, 255, 255, 0.1);
    padding: var(--space-lg) var(--space-md);
    border-radius: var(--radius-lg);
    border: 1px solid rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(10px);
    transition: all 0.3s ease;
  }

  .stat:hover {
    transform: translateY(-4px);
    background: rgba(255, 255, 255, 0.15);
  }

  .stat-number {
    display: block;
    font-size: var(--text-3xl);
    font-weight: 700;
    margin-bottom: var(--space-sm);
  }

  .stat-label {
    display: block;
    font-size: var(--text-sm);
    opacity: 0.8;
  }

  .features {
    padding: var(--space-5xl) 0;
    background: linear-gradient(135deg, var(--color-surface), var(--color-background));
  }

  .section-header {
    text-align: center;
    margin-bottom: var(--space-5xl);
  }

  .section-header h2 {
    font-size: clamp(2rem, 4vw, 3rem);
    margin-bottom: var(--space-md);
    color: var(--color-text-primary);
    background: linear-gradient(135deg, var(--color-primary), var(--color-secondary));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .section-subtitle {
    font-size: var(--text-lg);
    color: var(--color-text-secondary);
    max-width: 600px;
    margin: 0 auto;
    line-height: 1.6;
  }

  .features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--space-xl);
    margin-bottom: var(--space-5xl);
  }

  .feature-card {
    background: var(--color-background);
    padding: var(--space-xl);
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-md);
    text-align: center;
    transition: all 0.3s ease;
    border: 1px solid var(--color-border);
    position: relative;
    overflow: hidden;
  }

  .feature-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, var(--color-primary), var(--color-accent));
  }

  .feature-card:hover {
    transform: translateY(-8px);
    box-shadow: var(--shadow-xl);
  }

  .feature-icon {
    font-size: var(--text-4xl);
    margin-bottom: var(--space-md);
  }

  .feature-card h3 {
    font-size: var(--text-xl);
    margin-bottom: var(--space-md);
    color: var(--color-text-primary);
  }

  .feature-card p {
    color: var(--color-text-secondary);
    line-height: 1.6;
    margin-bottom: var(--space-md);
  }

  .feature-highlight {
    background: linear-gradient(135deg, var(--color-primary), var(--color-accent));
    color: white;
    padding: var(--space-sm) var(--space-md);
    border-radius: var(--radius-full);
    font-size: var(--text-sm);
    font-weight: 600;
    display: inline-block;
  }

  @keyframes float {
    0%, 100% { transform: translate(0, 0) rotate(0deg); }
    33% { transform: translate(30px, -30px) rotate(1deg); }
    66% { transform: translate(-20px, 20px) rotate(-1deg); }
  }

  @media (max-width: 768px) {
    .hero {
      padding: var(--space-4xl) 0;
    }
    
    .cta-section {
      flex-direction: column;
      align-items: center;
    }
    
    .stats {
      grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
      gap: var(--space-md);
    }


    .features-grid {
      grid-template-columns: 1fr;
      gap: var(--space-lg);
    }
  }
</style>