---
import type { RepoData } from '../../types/index.js';
import { designTokens, generateCSSVariables } from '../../styles/design-tokens.js';

export interface Props {
  title: string;
  description?: string;
  repoData?: RepoData;
  layoutType?: string;
  customTokens?: Partial<typeof designTokens>;
}

const { title, description, repoData, layoutType = 'default', customTokens } = Astro.props;

// Merge custom tokens with default design tokens
const tokens = customTokens ? { ...designTokens, ...customTokens } : designTokens;
const cssVariables = generateCSSVariables(tokens);
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description || "GitLyte - AI-powered repository websites"} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>{title}</title>
    
    <!-- Preload fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=JetBrains+Mono:wght@400;500&display=swap" rel="stylesheet" />
    
    <!-- Design System CSS Variables -->
    <style set:html={cssVariables}></style>
  </head>
  <body class={`layout-${layoutType}`}>
    <slot />
  </body>
</html>

<style>
  html {
    font-family: var(--font-body);
    color: var(--color-text-primary);
    background-color: var(--color-background);
  }
  
  body {
    margin: 0;
    padding: 0;
    min-height: 100vh;
  }
  
  .layout-minimal {
    background: linear-gradient(135deg, var(--color-background) 0%, var(--color-surface) 100%);
  }
  
  .layout-hero-focused {
    background: var(--color-background);
  }
  
  .layout-grid {
    background: var(--color-surface);
  }
  
  .layout-sidebar {
    background: var(--color-background);
  }
  
  .layout-content-heavy {
    background: var(--color-background);
  }
</style>