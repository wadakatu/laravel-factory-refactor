---
interface Props {
  title: string;
  description?: string;
  stats: {
    stars: number;
    forks: number;
    issues: number;
  };
  hasReadme?: boolean;
  repoUrl?: string;
  hasLogo?: boolean;
  logoUrl?: string;
}

const { title, description, stats, hasReadme, repoUrl, hasLogo, logoUrl } = Astro.props as Props;
---

<div class="minimal-layout">
  <!-- Navigation Header -->
  <header class="minimal-header">
    <div class="container">
      <nav class="minimal-nav">
        <div class="nav-brand">
          {hasLogo && logoUrl ? (
            <a href="../" class="brand-link">
              <img src={logoUrl} alt={title + " logo"} class="brand-logo" />
            </a>
          ) : (
            <a href="../" class="brand-link">
              <h1 class="brand-title">{title}</h1>
            </a>
          )}
        </div>
        <div class="nav-links">
          <a href="../" class="nav-link nav-active">Home</a>
          {hasReadme && <a href="./" class="nav-link">Documentation</a>}
          <a href={repoUrl} class="nav-link" target="_blank" rel="noopener">GitHub</a>
        </div>
      </nav>
    </div>
  </header>

  <!-- Hero Section -->
  <section class="hero-minimal">
    <div class="container">
      <header class="hero-header">
        <h1 class="hero-title">{title}</h1>
        <p class="description">{description}</p>
        
        <div class="actions">
          <a href={repoUrl} class="button" target="_blank" rel="noopener noreferrer">
            View Repository
          </a>
        </div>
      </header>
      
      <div class="stats">
        <div class="stat">
          <span class="stat-value">{stats.stars}</span>
          <span class="stat-label">Stars</span>
        </div>
        <div class="stat">
          <span class="stat-value">{stats.forks}</span>
          <span class="stat-label">Forks</span>
        </div>
        <div class="stat">
          <span class="stat-value">{stats.issues}</span>
          <span class="stat-label">Issues</span>
        </div>
      </div>
    </div>
  </section>
</div>

<style>
  /* Base Layout Styles */
  .minimal-layout {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
    line-height: 1.6;
    color: #1a1a1a;
    background-color: #ffffff;
  }

  .container {
    max-width: 800px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  /* Navigation Header */
  .minimal-header {
    position: sticky;
    top: 0;
    z-index: 100;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-bottom: 1px solid #e5e5e5;
  }

  .minimal-nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 0;
  }

  .nav-brand {
    display: flex;
    align-items: center;
  }

  .brand-link {
    text-decoration: none;
    color: inherit;
  }

  .brand-title {
    font-size: 1.5rem;
    font-weight: 700;
    margin: 0;
    color: #1a1a1a;
  }

  .brand-logo {
    height: 32px;
    width: auto;
  }

  .nav-links {
    display: flex;
    gap: 1.5rem;
    align-items: center;
  }

  .nav-link {
    text-decoration: none;
    color: #666666;
    font-weight: 500;
    font-size: 0.9rem;
    padding: 0.5rem 0;
    transition: color 0.2s ease;
  }

  .nav-link:hover {
    color: #1a1a1a;
  }

  .nav-link.nav-active {
    color: #1a1a1a;
    font-weight: 600;
  }

  /* Hero Section */
  .hero-minimal {
    min-height: 50vh;
    display: flex;
    align-items: center;
    padding: 3rem 0;
  }

  .hero-header {
    text-align: left;
    margin-bottom: 2rem;
  }

  .hero-title {
    font-size: 2rem;
    font-weight: 600;
    margin-bottom: 1rem;
    letter-spacing: -0.02em;
    color: #1a1a1a;
  }

  .description {
    font-size: 1.125rem;
    margin-bottom: 2rem;
    max-width: 600px;
    line-height: 1.6;
    color: #666666;
  }

  .actions {
    margin-bottom: 2rem;
  }

  .button {
    display: inline-block;
    padding: 0.5rem 1.5rem;
    background-color: #000000;
    color: white;
    border: none;
    border-radius: 2px;
    font-size: 0.875rem;
    font-weight: 500;
    text-decoration: none;
    transition: opacity 0.2s ease;
  }

  .button:hover {
    opacity: 0.8;
  }

  .stats {
    display: flex;
    gap: 2rem;
    padding-top: 1.5rem;
    border-top: 1px solid #e5e5e5;
  }

  .stat {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .stat-value {
    font-size: 1.5rem;
    font-weight: 600;
    color: #1a1a1a;
    font-variant-numeric: tabular-nums;
  }

  .stat-label {
    font-size: 0.875rem;
    color: #999999;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    font-weight: 500;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .container {
      padding: 0 1rem;
    }
    
    .minimal-nav {
      flex-direction: column;
      gap: 1rem;
      align-items: flex-start;
      padding: 0.75rem 0;
    }
    
    .nav-links {
      gap: 1rem;
      flex-wrap: wrap;
    }
    
    .brand-title {
      font-size: 1.25rem;
    }
    
    .nav-link {
      font-size: 0.85rem;
    }
    
    .hero-minimal {
      min-height: auto;
      padding: 2rem 0;
    }
    
    .hero-title {
      font-size: 1.75rem;
    }
    
    .description {
      font-size: 1rem;
    }
    
    .stats {
      gap: 1.5rem;
    }
    
    .stat-value {
      font-size: 1.25rem;
    }
    
    .stat-label {
      font-size: 0.75rem;
    }
  }

  @media (max-width: 480px) {
    .stats {
      flex-direction: column;
      gap: 1rem;
    }
    
    .stat {
      flex-direction: row;
      align-items: baseline;
      gap: 0.5rem;
    }
    
    .stat-value {
      font-size: 1rem;
    }
  }
</style>