---
import Layout from '../layouts/Layout.astro';

const { title, description, repoData } = Astro.props;

const hasLogo = true;
const logoUrl = "https://github.com/wadakatu/laravel-factory-refactor/raw/main/assets/logo.png";
const repoName = repoData.repo.name;
const repoUrl = repoData.repo.html_url;
---

<Layout title={title + " - Documentation"} description={description}>
  <div class="minimal-docs-layout">
    <!-- Navigation Header -->
    <header class="minimal-header">
      <div class="container">
        <nav class="minimal-nav">
          <div class="nav-brand">
            <a href="./" class="brand-link">
              {hasLogo ? (
                <img src={logoUrl} alt={repoName + " logo"} class="brand-logo" />
              ) : (
                <h1 class="brand-title">{repoName}</h1>
              )}
            </a>
          </div>
          <div class="nav-links">
            <a href="./" class="nav-link">Home</a>
            <a href="./docs" class="nav-link nav-active">Documentation</a>
            <a href={repoUrl} class="nav-link" target="_blank" rel="noopener">GitHub</a>
          </div>
        </nav>
      </div>
    </header>

    <!-- Main container with sidebar and content -->
    <div class="docs-container">
      <!-- Sidebar navigation -->
      <aside class="docs-sidebar">
        
<nav class="minimal-docs-navigation">
  <div class="nav-header">
    <h3>Documentation</h3>
  </div>
  <div class="nav-content">
    
<nav class="docs-navigation">
  <div class="docs-nav-header">
    <h3>üìñ Documentation</h3>
    <div class="reading-time">
      ‚è±Ô∏è 1 min read
    </div>
  </div>
  
  <div class="search-container">
    <input type="text" id="docs-search" placeholder="Search documentation..." class="search-input">
    <div id="search-results" class="search-results"></div>
  </div>
  
  <div class="table-of-contents">
    <h4>Table of Contents</h4>
    <div class="toc-items">
<a href="#laravel-factory-refactor" class="toc-link level-1" data-level="1">
  Laravel-Factory-Refactor
</a>
  <a href="#installation" class="toc-link level-2" data-level="2">
    Installation
  </a>
  <a href="#how-to-use" class="toc-link level-2" data-level="2">
    How to Use
  </a>
  <a href="#options" class="toc-link level-2" data-level="2">
    Options
  </a>
  <a href="#example" class="toc-link level-2" data-level="2">
    Example
  </a>
    <a href="#before" class="toc-link level-3" data-level="3">
      Before
    </a>
    <a href="#after" class="toc-link level-3" data-level="3">
      After
    </a>
  <a href="#license" class="toc-link level-2" data-level="2">
    License
  </a>
    </div>
  </div>
  
  <div class="docs-stats">
    <div class="stat">
      <span class="stat-label">Words</span>
      <span class="stat-value">183</span>
    </div>
    <div class="stat">
      <span class="stat-label">Code Examples</span>
      <span class="stat-value">6</span>
    </div>
  </div>
</nav>
  </div>
  <div class="nav-meta">
    <div class="read-time">
      <span class="label">Ë™≠‰∫ÜÊôÇÈñì</span>
      <span class="value">1ÂàÜ</span>
    </div>
    <div class="word-count">
      <span class="label">ÂçòË™ûÊï∞</span>
      <span class="value">183</span>
    </div>
  </div>
</nav>
<style>
  .minimal-docs-navigation {
    background: #fafafa;
    border-radius: 8px;
    padding: 1.5rem;
  }
  
  .nav-header h3 {
    font-size: 1.125rem;
    font-weight: 600;
    margin: 0 0 1rem 0;
    color: #1a1a1a;
    border-bottom: 1px solid #e5e5e5;
    padding-bottom: 0.5rem;
  }
  
  .nav-content .toc-link {
    display: block;
    color: #666666;
    text-decoration: none;
    padding: 0.375rem 0;
    font-size: 0.875rem;
    line-height: 1.4;
    transition: color 0.2s ease;
    border-left: 2px solid transparent;
    padding-left: 0.5rem;
  }
  
  .nav-content .toc-link:hover {
    color: #1a1a1a;
    border-left-color: #e5e5e5;
  }
  
  .nav-content .toc-link.level-1 {
    font-weight: 600;
    margin-top: 0.75rem;
    color: #1a1a1a;
  }
  
  .nav-content .toc-link.level-2 {
    padding-left: 1rem;
  }
  
  .nav-content .toc-link.level-3 {
    padding-left: 1.5rem;
    font-size: 0.8rem;
  }
  
  .nav-meta {
    margin-top: 2rem;
    padding-top: 1rem;
    border-top: 1px solid #e5e5e5;
  }
  
  .nav-meta > div {
    display: flex;
    justify-content: space-between;
    margin-bottom: 0.5rem;
    font-size: 0.75rem;
  }
  
  .nav-meta .label {
    color: #666666;
  }
  
  .nav-meta .value {
    font-weight: 500;
    color: #1a1a1a;
  }
</style>
      </aside>

      <!-- Main content -->
      <main class="docs-content">
        <article class="docs-article">
          
    <section class="doc-section" id="laravel-factory-refactor">
      <h1 id="laravel-factory-refactor">Laravel-Factory-Refactor</h1>
      <div class="section-content">
        <a href="https://packagist.org/packages/wadakatu/laravel-factory-refactor" target="_blank" rel="noopener"><img src="https://img.shields.io/github/v/release/wadakatu/laravel-factory-refactor?label=packagist" alt="GitHub release (latest by date)" class="markdown-image" loading="lazy" /></a>
<a href="https://packagist.org/packages/wadakatu/laravel-factory-refactor" target="_blank" rel="noopener"><img src="https://img.shields.io/packagist/php-v/wadakatu/laravel-factory-refactor" alt="Packagist PHP Version Support" class="markdown-image" loading="lazy" /></a>
<a href="https://github.com/wadakatu/laravel-factory-refactor/blob/main/LICENSE" target="_blank" rel="noopener"><img src="https://img.shields.io/badge/license-MIT-blue.svg" alt="License" class="markdown-image" loading="lazy" /></a>

<p>This package will help you to refactor the style of factory call from helper to static method for Laravel 10.x, 11.x, 12.x...</p>

<p>With this package, you can save plenty of time and focus on other important things.</p>
      </div>
    </section>
  
    <section class="doc-section" id="installation">
      <h2 id="installation">Installation</h2>
      <div class="section-content">
        <p>Install the package via composer:</p>

<div class="code-block-container">
      <div class="code-block-header">
        <span class="code-language">bash</span>
        <button class="copy-button" onclick="copyCodeToClipboard('code-yoy6pu9qn')" title="Copy code">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
            <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
          </svg>
          Copy
        </button>
      </div>
      <pre><code id="code-yoy6pu9qn" class="language-bash">composer require wadakatu/laravel-factory-refactor --dev</code></pre>
    </div>
      </div>
    </section>
  
    <section class="doc-section" id="how-to-use">
      <h2 id="how-to-use">How to Use</h2>
      <div class="section-content">
        <p>To refactor the style of factory call from helper to static method, run the artisan command:</p>

<div class="code-block-container">
      <div class="code-block-header">
        <span class="code-language">bash</span>
        <button class="copy-button" onclick="copyCodeToClipboard('code-0cvzrkigu')" title="Copy code">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
            <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
          </svg>
          Copy
        </button>
      </div>
      <pre><code id="code-0cvzrkigu" class="language-bash">php artisan refactor:factory</code></pre>
    </div>
      </div>
    </section>
  
    <section class="doc-section" id="options">
      <h2 id="options">Options</h2>
      <div class="section-content">
        <p>By default, all factory call under <code>tests/</code> directory are the target of refactoring.</p>

<p>If you want to change the target directory, you can do that by using the <code>--dir</code> option.</p>

<div class="code-block-container">
      <div class="code-block-header">
        <span class="code-language">bash</span>
        <button class="copy-button" onclick="copyCodeToClipboard('code-5896xw84h')" title="Copy code">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
            <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
          </svg>
          Copy
        </button>
      </div>
      <pre><code id="code-5896xw84h" class="language-bash">php artisan refactor:factory --dir tests/Feature</code></pre>
    </div>

<p>---</p>

<p>By default, <code>Tests\\</code> namespace is the target of refactoring.</p>

<p>If you want to change the target namespace, you can do that by using the <code>--namespace</code> option.</p>

<div class="code-block-container">
      <div class="code-block-header">
        <span class="code-language">bash</span>
        <button class="copy-button" onclick="copyCodeToClipboard('code-n3skcxjof')" title="Copy code">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
            <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
          </svg>
          Copy
        </button>
      </div>
      <pre><code id="code-n3skcxjof" class="language-bash">php artisan refactor:factory --dir app/Models„ÄÄ--namespace App\\Models</code></pre>
    </div>

<p>---</p>
      </div>
    </section>
  
    <section class="doc-section" id="example">
      <h2 id="example">Example</h2>
      <div class="section-content">
        
      </div>
    </section>
  
    <section class="doc-section" id="before">
      <h3 id="before">Before</h3>
      <div class="section-content">
        <div class="code-block-container">
      <div class="code-block-header">
        <span class="code-language">phpt</span>
        <button class="copy-button" onclick="copyCodeToClipboard('code-uqfsl1sv4')" title="Copy code">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
            <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
          </svg>
          Copy
        </button>
      </div>
      <pre><code id="code-uqfsl1sv4" class="language-phpt">factory(User::class)-&gt;make();
        factory(App\Models\User::class)-&gt;make();
        factory(User::class, 10)-&gt;make();
        factory(App\Models\User::class, 10)-&gt;make();
        factory($model)-&gt;make();
        factory(User::class, $count[&#39;user&#39;])-&gt;make();</code></pre>
    </div>
      </div>
    </section>
  
    <section class="doc-section" id="after">
      <h3 id="after">After</h3>
      <div class="section-content">
        <div class="code-block-container">
      <div class="code-block-header">
        <span class="code-language">phpt</span>
        <button class="copy-button" onclick="copyCodeToClipboard('code-27atlrj25')" title="Copy code">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
            <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
          </svg>
          Copy
        </button>
      </div>
      <pre><code id="code-27atlrj25" class="language-phpt">User::factory()-&gt;make();
        App\Models\User::factory()-&gt;make();
        User::factory()-&gt;count(10)-&gt;make();
        App\Models\User::factory()-&gt;count(10)-&gt;make();
        $model::factory()-&gt;make();
        User::factory()-&gt;count($count[&#39;user&#39;])-&gt;make();</code></pre>
    </div>
      </div>
    </section>
  
    <section class="doc-section" id="license">
      <h2 id="license">License</h2>
      <div class="section-content">
        <p>The MIT License (MIT). Please see <a href="https://github.com/wadakatu/laravel-factory-refactor/blob/main/LICENSE.md" target="_blank" rel="noopener">license file</a> for more information.</p>
      </div>
    </section>
  
        </article>
      </main>
    </div>
  </div>
</Layout>

<style>
  /* Minimal Docs Layout Styles */
  .minimal-docs-layout {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
    line-height: 1.6;
    color: #1a1a1a;
    background-color: #ffffff;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  /* Navigation Header */
  .minimal-header {
    position: sticky;
    top: 0;
    z-index: 100;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-bottom: 1px solid #e5e5e5;
  }

  .minimal-nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 0;
  }

  .nav-brand {
    display: flex;
    align-items: center;
  }

  .brand-link {
    text-decoration: none;
    color: inherit;
  }

  .brand-title {
    font-size: 1.5rem;
    font-weight: 700;
    margin: 0;
    color: #1a1a1a;
  }

  .brand-logo {
    height: 32px;
    width: auto;
  }

  .nav-links {
    display: flex;
    gap: 1.5rem;
    align-items: center;
  }

  .nav-link {
    text-decoration: none;
    color: #666666;
    font-weight: 500;
    font-size: 0.9rem;
    padding: 0.5rem 0;
    transition: color 0.2s ease;
  }

  .nav-link:hover {
    color: #1a1a1a;
  }

  .nav-link.nav-active {
    color: #1a1a1a;
    font-weight: 600;
  }

  /* Docs Container */
  .docs-container {
    display: grid;
    grid-template-columns: 240px 1fr;
    gap: 3rem;
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
    min-height: calc(100vh - 80px);
  }

  /* Sidebar */
  .docs-sidebar {
    position: sticky;
    top: 100px;
    height: fit-content;
    background: #fafafa;
    border: 1px solid #e5e5e5;
    border-radius: 8px;
    padding: 1.5rem;
  }

  /* Main Content */
  .docs-content {
    max-width: none;
  }

  .docs-article {
    background: #ffffff;
    padding: 2rem;
    border: 1px solid #e5e5e5;
    border-radius: 8px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  }

  /* Typography */
  .docs-article h1 {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 1.5rem;
    color: #1a1a1a;
    border-bottom: 2px solid #e5e5e5;
    padding-bottom: 1rem;
  }

  .docs-article h2 {
    font-size: 2rem;
    font-weight: 600;
    margin: 2rem 0 1rem 0;
    color: #1a1a1a;
    border-bottom: 1px solid #e5e5e5;
    padding-bottom: 0.5rem;
  }

  .docs-article h3 {
    font-size: 1.5rem;
    font-weight: 600;
    margin: 1.5rem 0 0.75rem 0;
    color: #1a1a1a;
  }

  .docs-article p {
    margin-bottom: 1rem;
    line-height: 1.7;
    color: #333333;
  }

  .docs-article ul, .docs-article ol {
    margin-bottom: 1rem;
    padding-left: 1.5rem;
  }

  .docs-article li {
    margin-bottom: 0.5rem;
    line-height: 1.6;
  }

  .docs-article code {
    font-family: 'JetBrains Mono', 'Fira Code', monospace;
    font-size: 0.875em;
    background-color: #f5f5f5;
    border: 1px solid #e5e5e5;
    border-radius: 4px;
    padding: 0.125rem 0.25rem;
  }

  .docs-article pre {
    background-color: #f8f9fa;
    border: 1px solid #e5e5e5;
    border-radius: 6px;
    padding: 1rem;
    overflow-x: auto;
    margin: 1rem 0;
  }

  .docs-article pre code {
    background: none;
    border: none;
    padding: 0;
  }

  .docs-article blockquote {
    border-left: 4px solid #e5e5e5;
    margin: 1rem 0;
    padding-left: 1rem;
    color: #666666;
    font-style: italic;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .container {
      padding: 0 1rem;
    }

    .minimal-nav {
      flex-direction: column;
      gap: 1rem;
      align-items: flex-start;
      padding: 0.75rem 0;
    }

    .nav-links {
      gap: 1rem;
      flex-wrap: wrap;
    }

    .brand-title {
      font-size: 1.25rem;
    }

    .nav-link {
      font-size: 0.85rem;
    }

    .docs-container {
      grid-template-columns: 1fr;
      gap: 1.5rem;
      padding: 1rem;
    }

    .docs-sidebar {
      position: static;
      order: 2;
    }

    .docs-article {
      padding: 1.5rem;
    }

    .docs-article h1 {
      font-size: 2rem;
    }

    .docs-article h2 {
      font-size: 1.5rem;
    }
  }
</style>

<script>
  {
  "title": "Laravel-Factory-Refactor",
  "items": [
    {
      "id": "laravel-factory-refactor",
      "title": "Laravel-Factory-Refactor",
      "content": "[![GitHub release (latest by date)](https://img.shields.io/github/v/release/wadakatu/laravel-factory-refactor?label=packagist)](https://packagist.org/packages/wadakatu/laravel-factory-refactor)\n[![Packagist PHP Version Support](https://img.shields.io/packagist/php-v/wadakatu/laravel-factory-refactor)](https://packagist.org/packages/wadakatu/laravel-factory-refactor)\n[![License](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/wadakatu/laravel-factory-refactor/blob/main/LICENSE)\n\nThis package will help you to refactor the style of factory call from helper to static method for Laravel 10.x, 11.x, 12.x...\n\nWith this package, you can save plenty of time and focus on other important things.",
      "anchor": "#laravel-factory-refactor",
      "level": 1
    },
    {
      "id": "installation",
      "title": "Installation",
      "content": "Install the package via composer:\n\n```bash\ncomposer require wadakatu/laravel-factory-refactor --dev\n```",
      "anchor": "#installation",
      "level": 2
    },
    {
      "id": "how-to-use",
      "title": "How to Use",
      "content": "To refactor the style of factory call from helper to static method, run the artisan command:\n\n```bash\nphp artisan refactor:factory\n```",
      "anchor": "#how-to-use",
      "level": 2
    },
    {
      "id": "options",
      "title": "Options",
      "content": "By default, all factory call under `tests/` directory are the target of refactoring.\n\nIf you want to change the target directory, you can do that by using the `--dir` option.\n\n```bash\nphp artisan refactor:factory --dir tests/Feature\n```\n\n---\n\nBy default, `Tests\\\\` namespace is the target of refactoring.\n\nIf you want to change the target namespace, you can do that by using the `--namespace` option.\n\n```bash\nphp artisan refactor:factory --dir app/Models„ÄÄ--namespace App\\\\Models\n```\n\n---",
      "anchor": "#options",
      "level": 2
    },
    {
      "id": "example",
      "title": "Example",
      "content": "",
      "anchor": "#example",
      "level": 2
    },
    {
      "id": "license",
      "title": "License",
      "content": "The MIT License (MIT). Please see [license file](LICENSE.md) for more information.",
      "anchor": "#license",
      "level": 2
    }
  ],
  "metadata": {
    "estimatedReadTime": 1,
    "wordCount": 183,
    "codeBlocks": 6
  }
}
</script>
